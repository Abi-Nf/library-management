openapi: 3.0.3
info:
  title: Library API
  version: 1.0.0
  description: STD22078
servers:
  - url: https://library.com
paths:
  /books:
    get:
      summary: Get all books
      description: The returned books are ordered by updated datetime.
      operationId: getBooks
      parameters:
        - in: query
          name: bookName
          description: Filter return books by given name
          required: false
          schema:
            type: string
        #TODO3: add parameter to filter books by intervals of dates of the releaseDate
      responses:
        200:
          description: The list of filtered books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    put:
      summary: Create or update a list of books
      operationId: Create or update Books
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
  /authors:
    get:
      summary: Get all filtered authors
      description: get all authors filtered by given name
      operationId: getFilteredAuthors
      parameters:
        - in: query
          name: name
          description: the name that filter the query
          required: true
          schema:
            type: string
      responses:
        200:
          description: all filtered authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
    put:
      summary: create or modify an author
      description: It almost looks for the id to find if there is already on and modify else create
      operationId: updateAuthor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Author'
      responses:
        200:
          description: return the modified author
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
    delete:
      summary: Remove an author
      description: Remove an author by the body request
      operationId: removeAuthor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Author'
      responses:
        200:
          description: return the removed author data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
components:
  schemas:
    Author:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        gender:
          type: string
          enum:
            - Male
            - Female
    Book:
      type: object
      properties:
        id:
          type: string
        bookName:
          type: string
        author:
          $ref: '#/components/schemas/Author'
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
        releaseDate:
          type: string
          format: date